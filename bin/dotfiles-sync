#!/bin/bash

set -eu

warning() {
  printf "\e[33m$1\e[0m\n"
}

backup() {
  mkdir -p "$HOME/.backup/dotfiles-for-designers"
  filename="$(basename $1)"
  echo "Moving $HOME/$filename to $HOME/.backup/dotfiles-for-designers for backup"
  mv "$HOME/$filename" "$HOME/.backup/dotfiles-for-designers/"
}

create_symlink() {
  echo "Creating symlink at $2"
  ln -s "$1" "$2"
}

sync() {
  file_in_dotfiles="$PWD/$1"
  file_in_home="$HOME/.$1"

  if [[ -e $file_in_home ]]; then
    if [[ -L $file_in_home ]]; then
      if [[ "$(readlink $file_in_home)" != $file_in_dotfiles ]]; then
        warning "$file_in_home exists but is not linked to $file_in_dotfiles"
        backup $file_in_home
        create_symlink "$file_in_dotfiles" "$file_in_home"
      fi
    else
      warning "$file_in_home exists but is not a symlink."
      backup $file_in_home
      create_symlink "$file_in_dotfiles" "$file_in_home"
    fi
  else
    create_symlink "$file_in_dotfiles" "$file_in_home"
  fi
}

# Move to dotfiles root
cd "$(dirname "$BASH_SOURCE")/.."

git pull origin master || exit 1
git submodule update --init --recursive || exit 1

except=(
  Brewfile
  README.md
  bin
  script
  zsh
)
for file in *; do
  filename="$(basename "$file")"
  if [[ ! " ${except[@]} " =~ " ${filename} " ]] ; then
    sync $filename
  fi
done

if [[ -e $HOME/.gitconfig && ! -e $HOME/.gitconfig.local && $(grep -c 'increments/dotfiles-for-designers' ~/.gitconfig) -eq 1 ]] ; then
  warning "Please configure git as follows:"
  warning "  git config --file=$HOME/.gitconfig.local user.name 'YOUR NAME'"
  warning "  git config --file=$HOME/.gitconfig.local user.email 'YOUR EMAIL'"
  warning "  git config --file=$HOME/.gitconfig.local github.user 'YOUR GITHUB ACCOUNT'"
fi

vim -c 'PlugInstall | qall'
